// Generated by CoffeeScript 1.4.0

/**
 * @package     CleverStyle Music
 * @category    Web Components
 * @author      Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright   Copyright (c) 2014, Nazar Mokrynskyi
 * @license     MIT License, see license.txt
*/


(function() {
  var music_library, music_playlist, music_storage, player;

  music_storage = navigator.getDeviceStorage('music');

  music_library = cs.music_library;

  music_playlist = cs.music_playlist;

  player = (function() {
    var object_url, player_element;
    player_element = document.createElement('audio');
    player_element.mozAudioChannelType = 'content';
    object_url = null;
    player_element.addEventListener('loadeddata', function() {
      URL.revokeObjectURL(object_url);
      return object_url = null;
    });
    player_element.addEventListener('error', function() {
      return player.pause();
    });
    window.player_element = player_element;
    return {
      open_new_file: function(blob) {
        if (this.playing) {
          this.pause();
        }
        if (object_url) {
          URL.revokeObjectURL(object_url);
        }
        object_url = URL.createObjectURL(blob);
        player_element.src = object_url;
        player_element.load();
        this.file_loaded = true;
        player_element.play();
        return this.playing = true;
      },
      play: function() {
        player_element.play();
        return this.playing = true;
      },
      pause: function() {
        player_element.pause();
        return this.playing = false;
      }
    };
  })();

  Polymer('cs-music-player', {
    title: 'Unknown',
    artist: 'Unknown',
    ready: function() {},
    rescan: function() {
      return music_library.rescan(function() {
        music_playlist.refresh();
        return alert('Rescanned successfully, playlist refreshed');
      });
    },
    play: function(id) {
      var element, play_button,
        _this = this;
      id = !isNaN(parseInt(id)) ? id : void 0;
      element = this;
      play_button = element.shadowRoot.querySelector('[icon=play]');
      if (player.file_loaded && !id) {
        if (player.playing) {
          player.pause();
          return play_button.icon = 'play';
        } else {
          player.play();
          return play_button.icon = 'pause';
        }
      } else if (id) {
        return music_library.get(id, function(data) {
          return music_storage.get(data.name).onsuccess = function() {
            var blob;
            blob = this.result;
            player.open_new_file(blob);
            (function() {
              var update_cover, update_cover_timeout;
              update_cover = function(cover) {
                var cover_bg;
                element.shadowRoot.querySelector('cs-cover').style.backgroundImage = cover ? "url(" + cover + ")" : 'none';
                cover_bg = cover || '/web-components/cs-music-player/img/bg.jpg';
                element.style.backgroundImage = "url(" + cover_bg + ")";
                if (cover) {
                  new Blur({
                    el: element,
                    path: cover,
                    radius: 10
                  });
                }
                return setTimeout((function() {
                  return URL.revokeObjectURL(cover);
                }), 500);
              };
              update_cover_timeout = setTimeout((function() {
                element.shadowRoot.querySelector('cs-cover').style.backgroundImage = 'none';
                return element.style.backgroundImage = "url(/web-components/cs-music-player/img/bg.jpg)";
              }), 500);
              return parseAudioMetadata(blob, function(metadata) {
                var cover;
                clearInterval(update_cover_timeout);
                cover = metadata.picture;
                if (cover) {
                  cover = URL.createObjectURL(cover);
                }
                return update_cover(cover);
              });
            })();
            play_button.icon = 'pause';
            return music_library.get_meta(id, function(data) {
              if (data) {
                element.title = data.title || 'Unknown';
                element.artist = data.artist || 'Unknown';
                if (data.album) {
                  return element.artist += ": " + data.album;
                }
              } else {
                element.title = 'Unknown';
                return element.artist = 'Unknown';
              }
            });
          };
        });
      } else {
        return music_playlist.current(function(id) {
          return _this.play(id);
        });
      }
    },
    prev: function() {
      var _this = this;
      return music_playlist.prev(function(id) {
        return _this.play(id);
      });
    },
    next: function() {
      var _this = this;
      return music_playlist.next(function(id) {
        return _this.play(id);
      });
    }
  });

}).call(this);
